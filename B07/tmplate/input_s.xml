<ROSETTASCRIPTS>###############################################################################################
###                                                                                         ###
###        RosettaScript XML file for designing ferredoxin-like fold structures.            ###
###                                                                                         ###
###       Principles for designing ideal protein structures                                 ###
###       Nobuyasu Koga, Rie Tatsumi-Koga, Gaohua Liu, Rong Xiao, Thomas B. Acton,          ###
###       Gaetano T. Montelione, and David Baker                                            ###
###       Nature 2012, Supplementary Data                                                   ###
###                                                                                         ###
###############################################################################################
##
##   (The lines started with '#' are comments.)
## 
##   This protocol consists of 4 steps:                                                    
##
##   1) Build backbone structures for the former half of ferredoxin-like fold.
##   2) Build backbone structures for the latter half, extending from the former half.
##   3) Design sidechains followed by the relaxation of the structure of the backbone and the side chains.
##      (Select structures based on the DSSP secondary structure, the helix-pairing, and the energy filters after this step.)
##   4) Perform futher repeats of the sidechain design and relaxation calculation, followed by the energy and the packing filters.
##      ( The step 4 is performed for the selected structures from those produced after the step 3. )
##
	<SCOREFXNS>
           <ScoreFunction name="SFXN1" weights="fldsgn_cen" >
                <Reweight scoretype="hbond_sr_bb" weight="1.0" />
                <Reweight scoretype="hbond_lr_bb" weight="1.0" />
           </ScoreFunction>
           <ScoreFunction name="SFXN2" weights="fldsgn_cen" >
                <Reweight scoretype="hbond_sr_bb" weight="1.0" />
                <Reweight scoretype="hbond_lr_bb" weight="1.0" />
           </ScoreFunction>
	</SCOREFXNS>
        <FILTERS>

           ## ===== For step 1 ======= ##

           ## Select structures that have the stand pairs, 1-3.A.0;2-3.A.0, which indicates
           ## that 1st and 3rd strands make antiparallel beta-strand pair with register shift 0, and
           ##      2nd and 3rd strands make antiparallel beta-strand pair with register shift 0.
           <SheetTopology name="st1" blueprint="./input1.bbskel" /> 

           ## Eliminate structures that have a kinked helix.
           <HelixKink          name="hk1" blueprint="./input1.bbskel" />

           ## Define the compound filter of st1 and hk1.
           <CompoundStatement name="cm1" >
                <AND filter_name="st1"/>
                <AND filter_name="hk1"/>
           </CompoundStatement>         

        </FILTERS>
        <TASKOPERATIONS>

           ## ====== For step 3 and 4 ====== ##

           ## Limit the range of the chi2 angles for PHE, TYR, and HIS.


           ## Select amino acid types for each residue position based on solvent-accessible surface area and the secondary structure type.


        </TASKOPERATIONS>
	<MOVERS>

           ## ====== For step 1 ======= ##

           ## Apply constraints between strands. See SSPAIR line in input1.bbskel.
           <SetSecStructEnergies name="sse1" scorefxn="SFXN1" blueprint="./input1.bbskel" />

           ## Build backbone for the former half.
  	   <BluePrintBDR name="bdr1" scorefxn="SFXN1" use_abego_bias="0" blueprint="./input1.bbskel" />

           ## Repeat the backbone building util satisfying the compound filter.
           <LoopOver     name="lover1" mover_name="bdr1" filter_name="cm1" iterations="10" drift="0" ms_whenfail="FAIL_DO_NOT_RETRY"/>

           <Dssp name="dssp" />


	</MOVERS>
	<APPLY_TO_POSE>
	</APPLY_TO_POSE>
	<PROTOCOLS>

           ## ====== Step 1 ======= ##

            <Add mover_name="sse1"   />
            <Add mover_name="bdr1" />

           ## ====== Step 2 ======= ##

            Add mover_name="sse2"   />
            Add mover_name="lover2" />

           ## ====== Step 3 ======= ##

            Add mover_name="flxbb1" />

           # After the step 3, select structures by the following filters.
            Add mover_name=dssp />
            Add filter_name=ss />
            Add filter_name=hp />
            Add filter_name=sc />

           ## ====== Step 4 ======= ##
           ## The step 4 is performed for the selected structures from those produced after the step 3.

            Add mover_name=flxbb2 />
            Add mover_name=dssp />
            Add filter_name=ss />
            Add filter_name=pstat />
            Add filter_name=sc />

	</PROTOCOLS>

</ROSETTASCRIPTS>
